{"version":3,"sources":["views/notifications/alerts/Alerts.js","views/pages/login/Login.js"],"names":["Alerts","alertContext","useContext","AlertContext","alerts","length","map","alert","xs","md","color","type","msg","Login","props","authContext","AuthContext","setAlert","login","error","clearErrors","isAuthenticated","useEffect","history","push","useState","identifier","password","user","setUser","onChange","e","target","name","value","className","placeholder","autoComplete","required","onClick"],"mappings":"gOAiCeA,IAlBA,WACb,IAAMC,EAAeC,qBAAWC,KAEhC,OACEF,EAAaG,OAAOC,OAAS,GAC7BJ,EAAaG,OAAOE,KAAI,SAACC,GAAD,OACtB,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,MAAOH,EAAMI,KAArB,SAA4BJ,EAAMK,kB,gICyG/BC,UA7GD,SAACC,GACb,IAAMb,EAAeC,qBAAWC,KAC1BY,EAAcb,qBAAWc,KACvBC,EAAahB,EAAbgB,SACAC,EAA+CH,EAA/CG,MAAOC,EAAwCJ,EAAxCI,MAAOC,EAAiCL,EAAjCK,YAAaC,EAAoBN,EAApBM,gBAEnCC,qBAAU,WACJD,GACFP,EAAMS,QAAQC,KAAK,KAEP,oCAAVL,IACFF,EAASE,EAAO,UAChBC,OAGD,CAACD,EAAOE,EAAiBP,EAAMS,UAfX,MAiBCE,mBAAS,CAC/BC,WAAY,GACZC,SAAU,KAnBW,mBAiBhBC,EAjBgB,KAiBVC,EAjBU,KAsBfH,EAAyBE,EAAzBF,WAAYC,EAAaC,EAAbD,SAEdG,EAAW,SAACC,GAAD,OAAOF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAarE,OACE,qBAAKC,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,UAAU,yBAAhB,UACE,cAAC,IAAD,CAAM1B,GAAG,IAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO0B,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,iBAGhB,cAAC,IAAD,CACEtB,KAAK,QACLyB,YAAY,QACZC,aAAa,QACbJ,KAAK,aACLC,MAAOR,EACPI,SAAUA,EACVQ,UAAQ,OAGZ,eAAC,IAAD,CAAaH,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,wBAGhB,cAAC,IAAD,CACEtB,KAAK,WACLyB,YAAY,WACZC,aAAa,mBACbJ,KAAK,WACLC,MAAOP,EACPG,SAAUA,EACVQ,UAAQ,OAGZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAM9B,GAAG,IAAT,SACE,cAAC,IAAD,CACEE,MAAM,UACN6B,QA1DP,SAACR,GACG,KAAfL,GAAkC,KAAbC,EACvBV,EAAS,4BAA6B,UAEtCC,EAAM,CACJQ,aACAC,cAqDkBQ,UAAU,OAHZ,qBAQF,cAAC,IAAD,CAAM3B,GAAG,IAAI2B,UAAU,aAAvB,SACE,cAAC,IAAD,CAASzB,MAAM,OAAOyB,UAAU,OAAhC,8CAWd,cAAC,IAAD","file":"static/js/5.aa591801.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow,\n} from \"@coreui/react\";\nimport { DocsLink } from \"src/reusable\";\nimport AlertContext from \"../../../context/alert/alertContext\";\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 &&\n    alertContext.alerts.map((alert) => (\n      <CCol xs=\"12\" md=\"6\">\n        <CCard>\n          <CCardHeader>Alert</CCardHeader>\n          <CCardBody>\n            <CAlert color={alert.type}>{alert.msg}</CAlert>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport AuthContext from \"../../../context/auth/authContext\";\nimport AlertContext from \"../../../context/alert/alertContext\";\nimport Alerts from \"../../notifications/alerts/Alerts\";\n\nconst Login = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const { setAlert } = alertContext;\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error === \"Identifier or password invalid.\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    identifier: \"\",\n    password: \"\",\n  });\n\n  const { identifier, password } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    if (identifier === \"\" || password === \"\") {\n      setAlert(\"Please fill in all fields\", \"danger\");\n    } else {\n      login({\n        identifier,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                        name=\"identifier\"\n                        value={identifier}\n                        onChange={onChange}\n                        required\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChange}\n                        required\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          color=\"primary\"\n                          onClick={onSubmit}\n                          className=\"px-4\"\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n\n          <Alerts />\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}