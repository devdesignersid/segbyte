{"version":3,"sources":["views/survey/Survey.js"],"names":["Survey","match","location","useState","survey","setSurvey","collaborators","setCollborators","participants","setParticipants","useEffect","axios","get","id","then","res","console","log","data","surveyparticipants","params","className","size","content","cilNotes","surveyname","sm","style","marginBottom","description","map","collaborator","username","paddingLeft","surveyadmingroup","surveyparticipantgroup","participant","Startdate","Enddate"],"mappings":"2PA0GeA,UAxFA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAsB,KAAfC,SACKC,mBAAS,KADC,mBAC/BC,EAD+B,KACvBC,EADuB,OAEGF,mBAAS,IAFZ,mBAE/BG,EAF+B,KAEhBC,EAFgB,OAGEJ,mBAAS,IAHX,mBAG/BK,EAH+B,KAGjBC,EAHiB,KAItCC,qBAAU,WACRC,IAAMC,IAAN,iDAAoDC,IAAMC,MAAK,SAACC,GAC9DC,QAAQC,IAAIF,EAAIG,MAChBb,EAAUU,EAAIG,MACdX,EAAgBQ,EAAIG,KAAKZ,eACzBG,EAAgBM,EAAIG,KAAKC,yBAE1B,IAXmC,IAa1BN,EACRZ,EADFmB,OAAUP,GAGZ,OACE,qCACGG,QAAQC,IAAIX,GACb,qBAAIe,UAAU,QAAd,UACE,cAAC,IAAD,CAAOC,KAAM,KAAMC,QAASC,MAD9B,IAC4CpB,EAAOqB,cAEnD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMC,GAAG,IAAT,UACE,sBACEC,MAAO,CACLC,aAAc,QAFlB,UAKE,6CACCxB,EAAOyB,eAEV,gCACE,sDACA,oBAAIhB,GAAG,qBAAP,SACGP,EAAcwB,KAAI,SAACC,GAAD,OACjB,6BAAKA,EAAaC,sBAK1B,eAAC,IAAD,CAAMN,GAAG,IAAT,UACE,gDACA,qBACEC,MAAO,CACLM,YAAa,QAFjB,UAKE,qDACsB,IACnB7B,EAAO8B,iBAAmB9B,EAAO8B,iBAAmB,SAEvD,2DAC4B,IACzB9B,EAAO+B,uBACJ/B,EAAO+B,uBACP,SAEN,oDACqB,IAEjB,6BACG3B,EAAasB,KAAI,SAACM,GAAD,OAChB,6BAAKA,EAAYJ,mBAMzB,oDACqB,IAClB5B,EAAOiC,UAAYjC,EAAOiC,UAAY,SAGzC,mDACoBjC,EAAOkC,QAAUlC,EAAOkC,QAAU","file":"static/js/11.b7984fa4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n} from \"@coreui/react\";\nimport { cilNotes } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst Survey = ({ match, location }) => {\n  const [survey, setSurvey] = useState({});\n  const [collaborators, setCollborators] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    axios.get(`http://139.59.244.122:1337/surveyforms/${id}`).then((res) => {\n      console.log(res.data);\n      setSurvey(res.data);\n      setCollborators(res.data.collaborators);\n      setParticipants(res.data.surveyparticipants);\n    });\n  }, []);\n  const {\n    params: { id },\n  } = match;\n\n  return (\n    <>\n      {console.log(collaborators)}\n      <h4 className=\"title\">\n        <CIcon size={\"xl\"} content={cilNotes} /> {survey.surveyname}\n      </h4>\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol sm=\"5\">\n              <div\n                style={{\n                  marginBottom: \"15px\",\n                }}\n              >\n                <h5>Description</h5>\n                {survey.description}\n              </div>\n              <div>\n                <h5>Survey Collaborators</h5>\n                <ul id=\"collaborators-list\">\n                  {collaborators.map((collaborator) => (\n                    <li>{collaborator.username}</li>\n                  ))}\n                </ul>\n              </div>\n            </CCol>\n            <CCol sm=\"7\">\n              <h5>Survey Details</h5>\n              <ul\n                style={{\n                  paddingLeft: \"15px\",\n                }}\n              >\n                <li>\n                  Survey Admin Group:{\" \"}\n                  {survey.surveyadmingroup ? survey.surveyadmingroup : \"Nil\"}\n                </li>\n                <li>\n                  Survey Participant Group:{\" \"}\n                  {survey.surveyparticipantgroup\n                    ? survey.surveyparticipantgroup\n                    : \"Nil\"}\n                </li>\n                <li>\n                  Survey Population:{\" \"}\n                  {\n                    <ul>\n                      {participants.map((participant) => (\n                        <li>{participant.username}</li>\n                      ))}\n                    </ul>\n                  }\n                </li>\n\n                <li>\n                  Survey Start Date:{\" \"}\n                  {survey.Startdate ? survey.Startdate : \"Nil\"}\n                </li>\n\n                <li>\n                  Survey End Date: {survey.Enddate ? survey.Enddate : \"Nil\"}\n                </li>\n              </ul>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default Survey;\n"],"sourceRoot":""}